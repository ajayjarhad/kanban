{"version":3,"sources":["components/Card/index.js","utils/pos_calculation.js","components/CardsContainer/index-styles.js","components/CardsContainer/index.js","components/Board/board.styles.js","components/Board/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","styled","div","CardContent","Card","card","React","useState","open","setOpen","handleClose","className","onClick","title","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","color","description","DialogActions","Button","removedIndex","addedIndex","arr","pos","length","Wrapper","props","isDragging","WrappedSection","section","CardContainerHeader","header","ContainerContainerTitle","span","CardsContainer","AddCardButtonDiv","AddCardButtonSpan","CardComposerDiv","ListCardComponent","ListCardDetails","ListCardTextArea","textarea","CardDescriptionArea","SubmitCardButtonDiv","SubmitCardButton","input","SubmitCardIcon","a","ADD_CARD","gql","onCardAdded","UPDATE_CARD","ON_CARD_UPDATE_SUBSCRIPTION","item","boards","cards","setCards","isTempCardActive","setTempCardActive","cardText","setCardText","cardDescription","setCardDescription","useMutation","insertCard","data","updateCardPos","useSubscription","cardAdded","onCardPosChange","useEffect","sectionId","concat","onAddCardSubmit","e","preventDefault","console","log","variables","label","orientation","groupName","onDragStart","onDragEnd","onDrop","columnId","payload","updatedPOS","boardCards","filter","p","PosCalculation","newCards","map","sortBy","cardId","parseInt","newColumn","indexOf","afterCardPOS","beforeCardPOS","onCardDrop","dragClass","dropClass","onDragEnter","getChildPayload","index","onDragLeave","onDropReady","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","placeholder","onChange","target","value","type","BoardContainer","BOARD_QUERY","UPDATE_SECTION_POS","ON_SECTION_POS_CHANGES","Board","setBoards","useQuery","loading","error","updateSectionPos","fetchSections","onSectionPosChange","newBoards","board","sortedBoards","updatePOS","dragHandleSelector","drawerWidth","useStyles","makeStyles","theme","root","display","padding","margin","appBar","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","amber","theText","amberText","theBackground","Header","classes","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","Avatar","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","link","split","query","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","style","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e83eea1.chunk.js","sourcesContent":["// Single card component\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst CardContainer = styled.div`\r\n  border-radius: 3px;\r\n  border-bottom: 1px solid #ccc;\r\n  background-color: #fff;\r\n  position: relative;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  max-width: 35rem;\r\n  width: 27.5rem;\r\n  margin-bottom: 7px;\r\n  min-width: 230px;\r\n`;\r\n\r\nconst CardContent = styled.div``;\r\n\r\nconst Card = ({ card }) => {\r\n  //Material UI's DialogBox handling logic\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Draggable key={card.id}>\r\n      <CardContainer className=\"card\">\r\n        <CardContent onClick={handleClickOpen}>{card.title}</CardContent>\r\n      </CardContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{card.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText color=\"black\">Card Description</DialogContentText>\r\n          {card.description\r\n            ? card.description\r\n            : `You haven't entered card description`}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"amber\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default function (removedIndex, addedIndex, arr) {\r\n  let pos;\r\n  if (addedIndex === arr.length - 1) {\r\n    pos = arr[arr.length - 1].pos + 16384;\r\n  } else if (addedIndex === 0) {\r\n    pos = arr[0].pos / 2;\r\n  } else if (addedIndex < removedIndex) {\r\n    let beforePOS = arr[addedIndex - 1].pos;\r\n    let afterPOS = arr[addedIndex].pos;\r\n\r\n    pos = (beforePOS + afterPOS) / 2;\r\n  } else if (addedIndex > removedIndex) {\r\n    let beforePOS = arr[addedIndex + 1].pos;\r\n    let afterPOS = arr[addedIndex].pos;\r\n\r\n    pos = (beforePOS + afterPOS) / 2;\r\n  }\r\n\r\n  return pos;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-block;\r\n  height: 100%;\r\n  vertical-align: top;\r\n  white-space: normal;\r\n  opacity: ${(props) => (props.isDragging ? 0 : 1)};\r\n`;\r\n\r\nexport const WrappedSection = styled.section`\r\n  width: 29.5rem;\r\n  background-color: #e3e3e3;\r\n  border-radius: 3px;\r\n  margin: 5px 5px;\r\n  padding: 10px;\r\n  margin: 15px;\r\n  position: relative;\r\n  display: inline-flex;\r\n  height: auto;\r\n  max-height: 90%;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CardContainerHeader = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const ContainerContainerTitle = styled.span`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  line-height: 18px;\r\n  cursor: grab;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding-top: 4px;\r\n`;\r\n\r\nexport const CardsContainer = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  align-self: center;\r\n  max-height: 90vh;\r\n  margin-top: 10px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const AddCardButtonDiv = styled.div`\r\n  min-height: 24px;\r\n  max-height: 24px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background-color: rgba(9, 30, 66, 0.08);\r\n    color: #172b4d;\r\n  }\r\n`;\r\n\r\nexport const AddCardButtonSpan = styled.span`\r\n  color: #5e6c84;\r\n`;\r\n\r\nexport const CardComposerDiv = styled.div``;\r\n\r\nexport const ListCardComponent = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 0 rgba(9, 30, 66, 0.25);\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  width: 27.5rem;\r\n  min-height: 20px;\r\n  position: relative;\r\n  text-decoration: none;\r\n  z-index: 0;\r\n`;\r\n\r\nexport const ListCardDetails = styled.div`\r\n  overflow: hidden;\r\n  padding: 6px 8px 2px;\r\n  position: relative;\r\n  z-index: 10;\r\n`;\r\n\r\nexport const ListCardTextArea = styled.textarea`\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  resize: none;\r\n  height: 54px;\r\n  background: none;\r\n  border: none;\r\n  box-shadow: none;\r\n  margin-bottom: 4px;\r\n  max-height: 162px;\r\n  min-height: 54px;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 400;\r\n  outline: none;\r\n  border-bottom: 2px solid #ffc107;\r\n`;\r\nexport const CardDescriptionArea = styled.textarea`\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  resize: none;\r\n  height: 54px;\r\n  background: none;\r\n  border: none;\r\n  box-shadow: none;\r\n  margin-bottom: 4px;\r\n  max-height: 162px;\r\n  min-height: 54px;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 400;\r\n  outline: none;\r\n`;\r\n\r\nexport const SubmitCardButtonDiv = styled.div`\r\n  height: 32px;\r\n`;\r\n\r\nexport const SubmitCardButton = styled.input`\r\n  background-color: #ffc107;\r\n  box-shadow: none;\r\n  border: none;\r\n  color: #fff;\r\n  height: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SubmitCardIcon = styled.a`\r\n  height: 32px;\r\n  line-height: 32px;\r\n  width: 32px;\r\n`;\r\n","// Card Container component holds the cards.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Card\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport PosCalculation from \"../../utils/pos_calculation\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport {\r\n  Wrapper,\r\n  WrappedSection,\r\n  CardContainerHeader,\r\n  ContainerContainerTitle,\r\n  CardsContainer,\r\n  AddCardButtonDiv,\r\n  AddCardButtonSpan,\r\n  CardComposerDiv,\r\n  ListCardComponent,\r\n  ListCardDetails,\r\n  ListCardTextArea,\r\n  SubmitCardButtonDiv,\r\n  SubmitCardButton,\r\n  SubmitCardIcon,\r\n  CardDescriptionArea,\r\n} from \"./index-styles\";\r\n\r\n// Mutation query to add the card into our MongoDB.\r\nconst ADD_CARD = gql`\r\n  mutation InsertCard(\r\n    $sectionId: ID!\r\n    $title: String!\r\n    $label: String!\r\n    $description: String!\r\n    $pos: Int!\r\n  ) {\r\n    insertCard(\r\n      request: {\r\n        sectionId: $sectionId\r\n        title: $title\r\n        label: $label\r\n        pos: $pos\r\n        description: $description\r\n      }\r\n    ) {\r\n      title\r\n      label\r\n      id\r\n      description\r\n    }\r\n  }\r\n`;\r\n// Subscription query to view the added card.\r\nconst onCardAdded = gql`\r\n  subscription {\r\n    cardAdded {\r\n      id\r\n      title\r\n      description\r\n      sectionId\r\n      pos\r\n    }\r\n  }\r\n`;\r\n// Mutation query to update the position of the card after it has been dragged.\r\nconst UPDATE_CARD = gql`\r\n  mutation UpdateCard($cardId: String!, $pos: Int!, $sectionId: String!) {\r\n    updateCardPos(\r\n      request: { cardId: $cardId, pos: $pos, sectionId: $sectionId }\r\n    ) {\r\n      id\r\n      title\r\n      label\r\n      pos\r\n      sectionId\r\n    }\r\n  }\r\n`;\r\n// Subscription query to view dragged card in the column.\r\nconst ON_CARD_UPDATE_SUBSCRIPTION = gql`\r\n  subscription {\r\n    onCardPosChange {\r\n      id\r\n      title\r\n      label\r\n      description\r\n      pos\r\n      sectionId\r\n    }\r\n  }\r\n`;\r\n// Initialization of card container function.\r\nconst CardContainer = ({ item, boards }) => {\r\n  //Setting up the initial states\r\n  const [cards, setCards] = useState([]);\r\n  const [isTempCardActive, setTempCardActive] = useState(false);\r\n  const [cardText, setCardText] = useState(\"\");\r\n  const [cardDescription, setCardDescription] = useState(\"\");\r\n\r\n  const [insertCard, { data }] = useMutation(ADD_CARD);\r\n  const [updateCardPos] = useMutation(UPDATE_CARD);\r\n  const { data: { cardAdded } = {} } = useSubscription(onCardAdded);\r\n  const { data: { onCardPosChange } = {} } = useSubscription(\r\n    ON_CARD_UPDATE_SUBSCRIPTION\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (item && item.cards) {\r\n      setCards(item.cards);\r\n    }\r\n  }, [item]);\r\n  // React hook to call 'cardAdded'[refer line 55] subscription, wheneber a card is added.\r\n  useEffect(() => {\r\n    if (cardAdded) {\r\n      if (item.id === cardAdded.sectionId) {\r\n        setCards(item.cards.concat(cardAdded));\r\n\r\n        setTempCardActive(false);\r\n      }\r\n    }\r\n  }, [cardAdded]);\r\n  // React hook to call 'onCardPosChange' subscription whenever card's position has been changed.\r\n  useEffect(() => {\r\n    if (onCardPosChange) {\r\n      if (item.id === onCardPosChange.sectionId) {\r\n      }\r\n    }\r\n  }, [onCardPosChange]);\r\n\r\n  // Code that handles card's Drag-n-drop.\r\n  const onCardDrop = (columnId, addedIndex, removedIndex, payload) => {\r\n    let updatedPOS;\r\n\r\n    if (addedIndex !== null && removedIndex !== null) {\r\n      let boardCards = boards.filter((p) => p.id === columnId)[0];\r\n\r\n      updatedPOS = PosCalculation(removedIndex, addedIndex, boardCards.cards);\r\n\r\n      let newCards = cards.map((item) => {\r\n        if (item.id === payload.id) {\r\n          return {\r\n            ...item,\r\n            pos: updatedPOS,\r\n          };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      newCards = sortBy(newCards, (item) => item.pos);\r\n\r\n      console.log(\"newCards\", newCards);\r\n      setCards(newCards);\r\n\r\n      updateCardPos({\r\n        variables: {\r\n          cardId: payload.id,\r\n          pos: parseInt(updatedPOS),\r\n          sectionId: columnId,\r\n        },\r\n      });\r\n    } else if (addedIndex !== null) {\r\n      const newColumn = boards.filter((p) => p.id === columnId)[0];\r\n      const columnIndex = boards.indexOf(newColumn);\r\n\r\n      if (addedIndex === 0) {\r\n        updatedPOS = 16384;\r\n      } else if (addedIndex === newColumn.cards.length) {\r\n        updatedPOS = newColumn.cards[newColumn.cards.length - 1].pos + 16384;\r\n      } else {\r\n        let afterCardPOS = newColumn.cards[addedIndex].pos;\r\n        let beforeCardPOS = newColumn.cards[addedIndex - 1].pos;\r\n\r\n        updatedPOS = (afterCardPOS + beforeCardPOS) / 2;\r\n      }\r\n\r\n      let newCards = cards.map((item) => {\r\n        if (item.id === payload.id) {\r\n          return {\r\n            ...item,\r\n            pos: updatedPOS,\r\n          };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n\r\n      newCards = sortBy(newCards, (item) => item.pos);\r\n\r\n      setCards(newCards);\r\n\r\n      updateCardPos({\r\n        variables: {\r\n          cardId: payload.id,\r\n          pos: parseInt(updatedPOS),\r\n          sectionId: columnId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  // Logic that handles when 'Add another card' is cliked.\r\n  const onAddButtonClick = () => {\r\n    setTempCardActive(true);\r\n  };\r\n  // Logic that  mutates the data into our MangoDB whenever user clicks on 'Add card'\r\n  const onAddCardSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (cardText) {\r\n      console.log(\"==>\", cards[cards.length - 1]);\r\n      insertCard({\r\n        variables: {\r\n          sectionId: item.id,\r\n          title: cardText,\r\n          label: cardText,\r\n          description: cardDescription,\r\n          pos:\r\n            cards && cards.length > 0\r\n              ? cards[cards.length - 1].pos + 16348\r\n              : 16348,\r\n        },\r\n      });\r\n\r\n      setCardText(\"\");\r\n      setCardDescription(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable key={item.id}>\r\n      <Wrapper className={\"card-container\"}>\r\n        <WrappedSection>\r\n          <CardContainerHeader className={\"column-drag-handle\"}>\r\n            <ContainerContainerTitle>{item.title}</ContainerContainerTitle>\r\n          </CardContainerHeader>\r\n          <CardsContainer>\r\n            {/* Drag-n-drop view*/}\r\n            <Container\r\n              orientation={\"vertical\"}\r\n              groupName=\"item\"\r\n              onDragStart={(e) => console.log(\"Drag Started\")}\r\n              onDragEnd={(e) => console.log(\"drag end\", e)}\r\n              onDrop={(e) => {\r\n                onCardDrop(item.id, e.addedIndex, e.removedIndex, e.payload);\r\n              }}\r\n              dragClass=\"card-ghost\"\r\n              dropClass=\"card-ghost-drop\"\r\n              onDragEnter={() => {}}\r\n              getChildPayload={(index) => {\r\n                return cards[index];\r\n              }}\r\n              onDragLeave={() => {}}\r\n              onDropReady={(p) => console.log(\"Drop ready: \", p)}\r\n              dropPlaceholder={{\r\n                animationDuration: 150,\r\n                showOnTop: true,\r\n                className: \"drop-preview\",\r\n              }}\r\n              dropPlaceholderAnimationDuration={200}\r\n            >\r\n              {cards.map((card) => (\r\n                <Card\r\n                  key={card.id}\r\n                  card={card}\r\n                  onAddCardSubmit={onAddCardSubmit}\r\n                />\r\n              ))}\r\n            </Container>\r\n            {isTempCardActive ? (\r\n              // Add card view\r\n              <CardComposerDiv>\r\n                <ListCardComponent>\r\n                  <ListCardDetails>\r\n                    <ListCardTextArea\r\n                      placeholder=\"Enter a title for the card\"\r\n                      onChange={(e) => {\r\n                        setCardText(e.target.value);\r\n                      }}\r\n                    />\r\n                    <CardDescriptionArea\r\n                      placeholder=\"Enter description (optional)\"\r\n                      onChange={(e) => {\r\n                        setCardDescription(e.target.value);\r\n                      }}\r\n                    />\r\n                  </ListCardDetails>\r\n                </ListCardComponent>\r\n                <SubmitCardButtonDiv>\r\n                  <SubmitCardButton\r\n                    type=\"button\"\r\n                    value=\"Add Card\"\r\n                    onClick={onAddCardSubmit}\r\n                  />\r\n                  <SubmitCardIcon>\r\n                    <IoIosAdd />\r\n                  </SubmitCardIcon>\r\n                </SubmitCardButtonDiv>\r\n              </CardComposerDiv>\r\n            ) : (\r\n              <AddCardButtonDiv onClick={onAddButtonClick}>\r\n                <AddCardButtonSpan>Add another card</AddCardButtonSpan>\r\n              </AddCardButtonDiv>\r\n            )}\r\n          </CardsContainer>\r\n        </WrappedSection>\r\n      </Wrapper>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BoardContainer = styled.div`\r\n  background: linear-gradient(-45deg, #000000, #434343);\r\n  background-size: 400% 400%;\r\n  animation: gradient 15s ease infinite;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: #393939;\r\n  overflow-y: hidden;\r\n  overflow-x: auto;\r\n  position: absolute;\r\n  padding: 5px;\r\n  margin: 0;\r\n  align-items: flex-start;\r\n  @keyframes gradient {\r\n    0% {\r\n      background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      background-position: 0% 50%;\r\n    }\r\n  }\r\n`;\r\n","// Board.js is responsible for rendering Board component that has 3 columns, to-do, in progress, done.\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CardContainer from \"../CardsContainer\";\r\nimport { Container } from \"react-smooth-dnd\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useMutation, useSubscription, useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport PosCalculation from \"../../utils/pos_calculation\";\r\n\r\n//CSS is declared in /board.styles.js\r\nimport { BoardContainer } from \"./board.styles\";\r\n\r\n// This Query returns all the columns/sections that are in our MongoDB.\r\nconst BOARD_QUERY = gql`\r\n  query {\r\n    fetchSections {\r\n      id\r\n      title\r\n      label\r\n      pos\r\n      description\r\n      cards {\r\n        id\r\n        title\r\n        label\r\n        description\r\n        pos\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// This mutate query is used for updating the position of column position change (The app supports drag-n-drop of columns).\r\nconst UPDATE_SECTION_POS = gql`\r\n  mutation UpdateSection($sectionId: String!, $pos: Int!) {\r\n    updateSectionPos(request: { sectionId: $sectionId, pos: $pos }) {\r\n      id\r\n      pos\r\n    }\r\n  }\r\n`;\r\n// Subscription query to view position changes on board component.\r\nconst ON_SECTION_POS_CHANGES = gql`\r\n  subscription {\r\n    onSectionPosChange {\r\n      id\r\n      pos\r\n    }\r\n  }\r\n`;\r\n// Initialization of board function.\r\nconst Board = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const { loading, error, data } = useQuery(BOARD_QUERY);\r\n  const [updateSectionPos] = useMutation(UPDATE_SECTION_POS);\r\n\r\n  // Returns the columns if there are any.\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBoards(data.fetchSections);\r\n    }\r\n  }, [data]);\r\n\r\n  // Fires up 'ON_SECTION_POS_CHANGES' query to update the position of the column after it has been dragged around.\r\n  const { data: { onSectionPosChange } = {} } = useSubscription(\r\n    ON_SECTION_POS_CHANGES\r\n  );\r\n\r\n  // React hook to call 'onSectionPosChange'[Refer line 43] subscription when the position of column changes\r\n  useEffect(() => {\r\n    if (onSectionPosChange) {\r\n      // console.log(\"onSectionPosChange\", onSectionPosChange);\r\n      let newBoards = boards;\r\n\r\n      newBoards = newBoards.map((board) => {\r\n        if (board.id === onSectionPosChange.id) {\r\n          return { ...board, pos: onSectionPosChange.pos };\r\n        } else {\r\n          return board;\r\n        }\r\n      });\r\n      let sortedBoards = sortBy(newBoards, [\r\n        (board) => {\r\n          return board.pos;\r\n        },\r\n      ]);\r\n      // console.log(\"useEffect\", sortedBoards);\r\n      setBoards(sortedBoards);\r\n    }\r\n  }, [onSectionPosChange]);\r\n\r\n  // This function defines the logic of column drag-n-drop using React Smooth DND\r\n  const onColumnDrop = ({ removedIndex, addedIndex, payload }) => {\r\n    if (data) {\r\n      let updatePOS = PosCalculation(\r\n        removedIndex,\r\n        addedIndex,\r\n        data.fetchSections\r\n      );\r\n      let newBoards = boards.map((board) => {\r\n        if (board.id === payload.id) {\r\n          return { ...board, pos: updatePOS };\r\n        } else {\r\n          return board;\r\n        }\r\n      });\r\n\r\n      let sortedBoards = sortBy(newBoards, [\r\n        (board) => {\r\n          return board.pos;\r\n        },\r\n      ]);\r\n\r\n      updateSectionPos({\r\n        variables: {\r\n          sectionId: payload.id,\r\n          pos: parseInt(updatePOS),\r\n        },\r\n      });\r\n      setBoards([...sortedBoards]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardContainer>\r\n      {/* This code uses the function declared above [refer line 93] to be called when column is dragged */}\r\n      <Container\r\n        orientation={\"horizontal\"}\r\n        onDrop={onColumnDrop}\r\n        onDragStart={() => {}}\r\n        getChildPayload={(index) => {\r\n          return boards[index];\r\n        }}\r\n        dragHandleSelector=\".column-drag-handle\"\r\n        dropPlaceholder={{\r\n          animationDuration: 150,\r\n          showOnTop: true,\r\n          className: \"cards-drop-preview\",\r\n        }}\r\n      >\r\n        {boards.length > 0 &&\r\n          boards.map((item, index) => (\r\n            <CardContainer item={item} key={index} boards={boards} />\r\n          ))}\r\n      </Container>\r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","// This component is responsible for rendering the header navigation. The file just contains UI logic.\r\nimport React from \"react\";\r\nimport Board from \"../Board/\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#ffc107\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"black\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  amber: {\r\n    backgroundColor: amber[500],\r\n    margin: 15,\r\n  },\r\n  theText: {\r\n    color: \"white\",\r\n  },\r\n  amberText: {\r\n    color: \"#ffc107\",\r\n  },\r\n  theBackground: {\r\n    backgroundColor: \"#ffc107\",\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            The Kanban Board\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon className={classes.amberText} />\r\n            ) : (\r\n              <ChevronRightIcon className={classes.theText} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider className={classes.theBackground} />\r\n\r\n        <List>\r\n          <ListItem>\r\n            <Avatar className={classes.amber}>A J</Avatar>{\" \"}\r\n            <span className={classes.theText}> Ajay Jarhad</span>\r\n          </ListItem>\r\n          <Divider className={classes.theBackground} />\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Board />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { split } from \"apollo-link\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\n\n// Setting up web socket\nconst httpLink = new HttpLink({\n  uri: \"https://kanban-backend-ajay.herokuapp.com/graphql\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: \"wss://kanban-backend-ajay.herokuapp.com/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\" style={{ height: \"100vh\" }}>\n        <Header />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}